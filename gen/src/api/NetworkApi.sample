
# This is a sample api mustache template.  It is representing a fictitious
# language and won't be usable or compile to anything without lots of changes.
# Use it as an example.  You can access the variables in the generator object
# like such:

# use the package from the `apiPackage` variable
package: api

# operations block
classname: NetworkApi

# loop over each operation in the API:

# each operation has an `operationId`:
operationId: networkConnect

# and parameters:
id: openapi::string_t
container: NetworkConnectRequest


# each operation has an `operationId`:
operationId: networkCreate

# and parameters:
networkConfig: NetworkCreateRequest


# each operation has an `operationId`:
operationId: networkDelete

# and parameters:
id: openapi::string_t


# each operation has an `operationId`:
operationId: networkDisconnect

# and parameters:
id: openapi::string_t
container: NetworkDisconnectRequest


# each operation has an `operationId`:
operationId: networkInspect

# and parameters:
id: openapi::string_t
verbose: bool
scope: openapi::string_t


# each operation has an `operationId`:
operationId: networkList

# and parameters:
filters: openapi::string_t


# each operation has an `operationId`:
operationId: networkPrune

# and parameters:
filters: openapi::string_t


# end of operations block
